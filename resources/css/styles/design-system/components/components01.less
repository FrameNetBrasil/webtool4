/* ===========================================
   MAIN CSS ENTRY POINT
   Complete design system import structure
   =========================================== */

/* ===========================================
   1. DESIGN SYSTEM TOKENS (First Priority)
   Import all design tokens before any other styles
   =========================================== */

/* Core design system tokens */
@import 'design-system/tokens/_index.css';

/* Individual token files (imported via _index.css) */
/* @import 'design-system/tokens/_root-variables.css'; */
/* @import 'design-system/tokens/_spacing.css'; */
/* @import 'design-system/tokens/_typography.css'; */
/* @import 'design-system/tokens/_colors.css'; */

/* ===========================================
   2. RESET AND NORMALIZE
   Base browser styles and resets
   =========================================== */

/* Modern CSS Reset */
*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html {
    line-height: 1.15;
    -webkit-text-size-adjust: 100%;
    scroll-behavior: smooth;
}

body {
    font-family: var(--font-family-base);
    font-size: var(--typography-body-size);
    font-weight: var(--typography-body-weight);
    line-height: var(--typography-body-line-height);
    color: var(--color-content-primary);
    background-color: var(--color-surface-primary);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
}

/* Remove default margins and set consistent typography */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
figure, hr,
fieldset, legend {
    margin: 0;
    padding: 0;
}

/* Remove list styles on ul, ol elements with a list role */
ul[role='list'],
ol[role='list'] {
    list-style: none;
}

/* Set core root defaults */
html:focus-within {
    scroll-behavior: smooth;
}

/* Set core body defaults */
body {
    min-height: 100vh;
    text-rendering: optimizeSpeed;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
    text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
    max-width: 100%;
    display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
    font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
    html:focus-within {
        scroll-behavior: auto;
    }

    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

/* ===========================================
   3. BASE TYPOGRAPHY STYLES
   Apply design system typography to semantic elements
   =========================================== */

/* Headings */
h1 {
    font-family: var(--typography-h1-font);
    font-size: var(--typography-h1-size);
    font-weight: var(--typography-h1-weight);
    line-height: var(--typography-h1-line-height);
    letter-spacing: var(--typography-h1-letter-spacing);
    color: var(--color-content-primary);
    margin-bottom: var(--spacing-4);
}

h2 {
    font-family: var(--typography-h2-font);
    font-size: var(--typography-h2-size);
    font-weight: var(--typography-h2-weight);
    line-height: var(--typography-h2-line-height);
    letter-spacing: var(--typography-h2-letter-spacing);
    color: var(--color-content-primary);
    margin-bottom: var(--spacing-3);
}

h3 {
    font-family: var(--typography-h3-font);
    font-size: var(--typography-h3-size);
    font-weight: var(--typography-h3-weight);
    line-height: var(--typography-h3-line-height);
    letter-spacing: var(--typography-h3-letter-spacing);
    color: var(--color-content-primary);
    margin-bottom: var(--spacing-3);
}

h4 {
    font-family: var(--typography-h4-font);
    font-size: var(--typography-h4-size);
    font-weight: var(--typography-h4-weight);
    line-height: var(--typography-h4-line-height);
    letter-spacing: var(--typography-h4-letter-spacing);
    color: var(--color-content-primary);
    margin-bottom: var(--spacing-2);
}

h5, h6 {
    font-family: var(--typography-h4-font);
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-semibold);
    line-height: var(--line-height-snug);
    color: var(--color-content-primary);
    margin-bottom: var(--spacing-2);
}

/* Body text */
p {
    font-family: var(--typography-body-font);
    font-size: var(--typography-body-size);
    font-weight: var(--typography-body-weight);
    line-height: var(--typography-body-line-height);
    letter-spacing: var(--typography-body-letter-spacing);
    color: var(--color-content-primary);
    margin-bottom: var(--spacing-4);
}

/* Lists */
ul, ol {
    margin-left: var(--spacing-6);
    margin-bottom: var(--spacing-4);
}

li {
    margin-bottom: var(--spacing-1);
}

/* Links */
a {
    color: var(--text-link);
    text-decoration: underline;
    text-decoration-color: var(--color-primary-300);
    text-underline-offset: 0.2em;
    transition: all var(--transition-fast);
}

a:hover {
    color: var(--text-link-hover);
    text-decoration-color: var(--color-primary-500);
}

a:focus {
    outline: 2px solid var(--color-focus-ring);
    outline-offset: 2px;
    border-radius: var(--radius-sm);
}

/* Code and preformatted text */
code {
    font-family: var(--typography-code-font);
    font-size: var(--typography-code-size);
    background-color: var(--color-neutral-100);
    padding: 0.2em 0.4em;
    border-radius: var(--radius-sm);
    color: var(--color-content-secondary);
}

pre {
    font-family: var(--typography-code-font);
    font-size: var(--typography-code-size);
    background-color: var(--color-neutral-100);
    padding: var(--spacing-4);
    border-radius: var(--radius-md);
    overflow-x: auto;
    margin-bottom: var(--spacing-4);
    line-height: var(--line-height-normal);
}

pre code {
    background: none;
    padding: 0;
}

/* Blockquotes */
blockquote {
    border-left: 4px solid var(--color-primary-300);
    padding-left: var(--spacing-4);
    margin: var(--spacing-6) 0;
    font-style: italic;
    color: var(--color-content-secondary);
}

/* Horizontal rules */
hr {
    border: none;
    height: 1px;
    background-color: var(--color-border-default);
    margin: var(--spacing-8) 0;
}

/* ===========================================
   4. DESIGN SYSTEM COMPONENTS
   Import component styles that use design tokens
   =========================================== */

/* Component styles */
@import 'design-system/components/_buttons.css';
@import 'design-system/components/_forms.css';
@import 'design-system/components/_cards.css';
@import 'design-system/components/_navigation.css';
@import 'design-system/components/_modals.css';
@import 'design-system/components/_alerts.css';
@import 'design-system/components/_badges.css';
@import 'design-system/components/_tables.css';
@import 'design-system/components/_tooltips.css';
@import 'design-system/components/_dropdowns.css';

/* Import your custom component styles */
/* This is where your redesigned components.less would be imported */

/* ===========================================
   5. FOMANTIC-UI INTEGRATION
   Import Fomantic-UI with design system overrides
   =========================================== */

/* Fomantic-UI base (if using) */
/* @import 'fomantic-ui/semantic.css'; */

/* Fomantic-UI overrides using design system tokens */
@import 'fomantic-ui/site.overrides';

/* ===========================================
   6. LAYOUT UTILITIES
   Utility classes for layout and spacing
   =========================================== */

/* Container classes */
.container {
    width: 100%;
    max-width: var(--content-max-width);
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--content-side-padding);
    padding-right: var(--content-side-padding);
}

.container-fluid {
    width: 100%;
    padding-left: var(--content-side-padding);
    padding-right: var(--content-side-padding);
}

/* Layout grid */
.grid {
    display: grid;
    gap: var(--layout-gap);
}

.flex {
    display: flex;
    gap: var(--component-gap);
}

.flex-col {
    display: flex;
    flex-direction: column;
    gap: var(--component-gap);
}

/* Section spacing */
.section {
    padding: var(--section-vertical-gap) 0;
}

.section-sm {
    padding: var(--spacing-8) 0;
}

.section-lg {
    padding: var(--spacing-16) 0;
}

/* ===========================================
   7. RESPONSIVE UTILITIES
   Responsive helper classes
   =========================================== */

/* Responsive display utilities */
@media (max-width: 767px) {
    .hide-mobile {
        display: none !important;
    }
}

@media (min-width: 768px) {
    .hide-desktop {
        display: none !important;
    }

    .show-desktop {
        display: block !important;
    }
}

@media (max-width: 767px) {
    .show-mobile {
        display: block !important;
    }
}

/* Responsive text alignment */
.text-center-mobile {
    text-align: center;
}

@media (min-width: 768px) {
    .text-center-mobile {
        text-align: left;
    }
}

/* ===========================================
   8. ACCESSIBILITY UTILITIES
   Classes for improving accessibility
   =========================================== */

/* Screen reader only content */
.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* Focus management */
.focus-trap {
    outline: none;
}

.focus-visible:focus {
    outline: 2px solid var(--color-focus-ring);
    outline-offset: 2px;
}

/* Skip links */
.skip-link {
    position: absolute;
    top: -40px;
    left: 6px;
    background: var(--color-content-primary);
    color: var(--color-content-inverse);
    padding: var(--spacing-2) var(--spacing-4);
    text-decoration: none;
    border-radius: var(--radius-md);
    z-index: var(--z-tooltip);
    transition: top var(--transition-fast);
}

.skip-link:focus {
    top: 6px;
}

/* High contrast mode support */
@media (prefers-contrast: high) {
    .contrast-border {
        border: 2px solid currentColor;
    }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
    .motion-safe {
        animation: none !important;
        transition: none !important;
    }
}

/* ===========================================
   9. PRINT STYLES
   Styles optimized for print media
   =========================================== */

@media print {
    /* Reset colors for print */
    * {
        background: transparent !important;
        color: black !important;
        box-shadow: none !important;
        text-shadow: none !important;
    }

    /* Ensure content fits on page */
    body {
        font-size: 12pt;
        line-height: 1.4;
    }

    h1, h2, h3 {
        page-break-after: avoid;
    }

    p, blockquote {
        orphans: 3;
        widows: 3;
    }

    blockquote, pre {
        page-break-inside: avoid;
    }

    /* Show link URLs */
    a[href]:after {
        content: " (" attr(href) ")";
        font-size: 10pt;
        color: #666;
    }

    /* Hide interactive elements */
    .no-print,
    button,
    input,
    select,
    textarea {
        display: none !important;
    }
}

/* ===========================================
   10. DEVELOPMENT UTILITIES
   Helper classes for development and debugging
   =========================================== */

/* Debug grid overlay */
.debug-grid {
    background-image:
        linear-gradient(rgba(255, 0, 0, 0.1) 1px, transparent 1px),
        linear-gradient(90deg, rgba(255, 0, 0, 0.1) 1px, transparent 1px);
    background-size: var(--spacing-4) var(--spacing-4);
}

/* Component boundaries */
.debug-components * {
    outline: 1px solid rgba(0, 255, 0, 0.3);
}

/* Performance monitoring */
.perf-monitor {
    position: fixed;
    top: 0;
    right: 0;
    background: var(--color-dark-overlay-80);
    color: var(--color-white);
    padding: var(--spacing-2);
    font-family: var(--font-family-mono);
    font-size: var(--font-size-xs);
    z-index: var(--z-tooltip);
    border-radius: 0 0 0 var(--radius-md);
}

/* Token validation in development */
.validate-tokens {
    position: relative;
}

.validate-tokens::before {
    content: "✓ Design tokens loaded";
    position: fixed;
    bottom: var(--spacing-4);
    left: var(--spacing-4);
    background: var(--color-success-500);
    color: var(--color-white);
    padding: var(--spacing-1) var(--spacing-2);
    border-radius: var(--radius-md);
    font-size: var(--font-size-xs);
    z-index: var(--z-tooltip);
    animation: fadeInOut 3s ease-in-out;
}

@keyframes fadeInOut {
    0%, 100% { opacity: 0; }
    10%, 90% { opacity: 1; }
}

/* ===========================================
   11. ANIMATION LIBRARY
   Common animations using design system timing
   =========================================== */

/* Fade animations */
@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes fadeOut {
    from { opacity: 1; }
    to { opacity: 0; }
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(var(--spacing-4));
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInDown {
    from {
        opacity: 0;
        transform: translateY(calc(-1 * var(--spacing-4)));
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Scale animations */
@keyframes scaleIn {
    from {
        opacity: 0;
        transform: scale(0.9);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes scaleOut {
    from {
        opacity: 1;
        transform: scale(1);
    }
    to {
        opacity: 0;
        transform: scale(0.9);
    }
}

/* Slide animations */
@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(calc(-1 * var(--spacing-8)));
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes slideInRight {
    from {
        opacity: 0;
        transform: translateX(var(--spacing-8));
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

/* Spin animation */
@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* Pulse animation */
@keyframes pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
}

/* Bounce animation */
@keyframes bounce {
    0%, 20%, 53%, 80%, 100% {
        transform: translate3d(0, 0, 0);
    }
    40%, 43% {
        transform: translate3d(0, calc(-1 * var(--spacing-6)), 0);
    }
    70% {
        transform: translate3d(0, calc(-1 * var(--spacing-3)), 0);
    }
    90% {
        transform: translate3d(0, calc(-1 * var(--spacing-1)), 0);
    }
}

/* Animation utility classes */
.animate-fade-in {
    animation: fadeIn var(--transition-normal) ease-out;
}

.animate-fade-in-up {
    animation: fadeInUp var(--transition-normal) ease-out;
}

.animate-scale-in {
    animation: scaleIn var(--transition-normal) ease-out;
}

.animate-slide-in-left {
    animation: slideInLeft var(--transition-normal) ease-out;
}

.animate-slide-in-right {
    animation: slideInRight var(--transition-normal) ease-out;
}

.animate-spin {
    animation: spin 1s linear infinite;
}

.animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-bounce {
    animation: bounce 1s infinite;
}

/* Animation duration utilities */
.duration-fast {
    animation-duration: var(--transition-fast);
}

.duration-normal {
    animation-duration: var(--transition-normal);
}

.duration-slow {
    animation-duration: var(--transition-slow);
}

/* ===========================================
   12. THEME VARIANTS
   Support for multiple theme variants
   =========================================== */

/* Light theme (default) */
:root {
    color-scheme: light;
}

/* Dark theme */
[data-theme="dark"] {
    color-scheme: dark;
}

/* Auto theme based on system preference */
@media (prefers-color-scheme: dark) {
    :root:not([data-theme]) {
        color-scheme: dark;

        /* Apply dark theme colors */
        --color-surface-primary: var(--color-neutral-900);
        --color-surface-secondary: var(--color-neutral-800);
        --color-surface-tertiary: var(--color-neutral-700);
        --color-content-primary: var(--color-neutral-50);
        --color-content-secondary: var(--color-neutral-200);
        --color-content-tertiary: var(--color-neutral-400);
        --color-border-default: var(--color-neutral-600);
    }
}

/* High contrast theme */
[data-theme="high-contrast"],
@media (prefers-contrast: high) {
    :root {
        --color-content-primary: #000000;
        --color-content-secondary: #000000;
        --color-surface-primary: #FFFFFF;
        --color-border-default: #000000;
        --color-interactive-primary: #0000FF;
        --color-state-error: #FF0000;
        --color-state-success: #008000;
    }
}

/* ===========================================
   13. PERFORMANCE OPTIMIZATIONS
   CSS optimizations for better performance
   =========================================== */

/* GPU acceleration for frequently animated elements */
.gpu-accelerated {
    transform: translateZ(0);
    will-change: transform;
}

/* Contain layout shifts */
.layout-contained {
    contain: layout style paint;
}

/* Optimize font rendering */
.optimize-text {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
}

/* Critical path CSS loading */
.above-fold {
    contain: layout;
}

/* ===========================================
   14. BROWSER COMPATIBILITY
   Fallbacks and polyfills for older browsers
   =========================================== */

/* CSS Grid fallback */
@supports not (display: grid) {
    .grid {
        display: flex;
        flex-wrap: wrap;
    }

    .grid > * {
        flex: 1 1 300px;
        margin: calc(var(--layout-gap) / 2);
    }
}

/* CSS Custom Properties fallback */
@supports not (--css: variables) {
    /* Fallback styles for browsers that don't support CSS custom properties */
    body {
        font-family: -apple-system, BlinkMacSystemFont, sans-serif;
        color: #1F2937;
        background-color: #FFFFFF;
    }

    .btn-primary {
        background-color: #5E6AD2;
        color: #FFFFFF;
    }
}

/* Flexbox gap fallback */
@supports not (gap: 1rem) {
    .flex > * + * {
        margin-left: var(--component-gap);
    }

    .flex-col > * + * {
        margin-top: var(--component-gap);
    }
}

/* ===========================================
   15. DOCUMENTATION AND MAINTENANCE
   Comments and structure for maintainability
   =========================================== */

/*
Design System Structure:
------------------------

1. Tokens Layer (Foundation)
   - Root variables (_root-variables.css)
   - Spacing tokens (_spacing.css)
   - Typography tokens (_typography.css)
   - Color tokens (_colors.css)

2. Component Layer (Building Blocks)
   - Buttons, forms, cards, etc.
   - Each component uses design tokens
   - Consistent API across all components

3. Utility Layer (Helpers)
   - Layout utilities
   - Spacing utilities
   - Typography utilities
   - Color utilities

4. Theme Layer (Customization)
   - Light/dark themes
   - High contrast mode
   - Brand variations

Usage Guidelines:
-----------------

1. Always use design tokens instead of hard-coded values
2. Follow the spacing scale for consistent layouts
3. Use semantic color names for better maintainability
4. Leverage utility classes for quick styling
5. Test across different themes and accessibility modes

Naming Conventions:
-------------------

- CSS Custom Properties: --category-property-variant
- Component Classes: .component-element-modifier
- Utility Classes: .property-value
- State Classes: .is-state or .has-state

Examples:
- --color-primary-500 (color token)
- --spacing-4 (spacing token)
- .btn-primary (component)
- .text-center (utility)
- .is-loading (state)

Performance Notes:
------------------

- Design tokens are cached by the browser
- Utility classes reduce CSS bundle size
- Components are modular and tree-shakeable
- Animations respect reduced motion preferences
- Print styles optimize for paper output

Accessibility Features:
-----------------------

- High contrast mode support
- Reduced motion preferences
- Focus management utilities
- Screen reader optimizations
- Color blind friendly alternatives

Browser Support:
----------------

- Modern browsers: Full feature support
- Older browsers: Graceful degradation
- Fallbacks for unsupported features
- Progressive enhancement approach
*/

/* End of main.css */
