/*******************************
    CSS Grid Layout System
    Updated with CSS Variables
*******************************/

:root {
    --sidebar-width: 280px;
    --header-height: 60px;
}

/* Main Application Grid */
.app-layout {
    display: grid;
    height: 100vh;

    /* Default desktop layout */
    grid-template-areas:
    "header header header"
    "sidebar main tools";
    grid-template-columns: 280px 1fr 320px;
    grid-template-rows: 60px 1fr;

    /* Remove gaps for seamless layout */
    gap: 0;
}

/* Layout Areas */
.app-header {
    grid-area: header;
    background: var(--color-bg-primary);
    border-bottom: 1px solid var(--color-border-primary);
    display: flex;
    align-items: center;
    padding: 0 1.5rem;
    z-index: 100;
}

.app-sidebar {
    grid-area: sidebar;
    background: var(--color-sidebar-bg);
    border-right: 1px solid var(--color-sidebar-border);
    overflow-y: auto;
    z-index: 50;
}

.app-main {
    grid-area: main;
    background: var(--color-bg-primary);
    overflow-y: auto;
    position: relative;
}

/* Page-level structure */
.app-main {
    display: flex;
    flex-direction: column;
    height: 100%;
    overflow: hidden;
}

.page-header {
    flex-shrink: 0;
    padding: 2rem;
    border-bottom: 1px solid #E5E7EB;
    background: #FFFFFF;
}

.page-content {
    flex: 1;
    overflow-y: auto;
    padding: 0; /* Container handles padding */
}

/* Content-level structure */
.content-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;

    &.wide { max-width: 95%; }
    &.narrow { max-width: 800px; }
    &.reading { max-width: 65ch; }
    &.fluid { max-width: 100%; padding: 1.5rem; }
}
.app-tools {
    grid-area: tools;
    background: var(--color-sidebar-bg);
    border-left: 1px solid var(--color-border-primary);
    overflow-y: auto;
}

/* Alternative Layouts */
.app-layout.no-tools {
    grid-template-areas:
    "header header"
    "sidebar main";
    grid-template-columns: 280px 1fr;
}

.app-layout.no-sidebar {
    grid-template-areas:
    "header header"
    "main tools";
    grid-template-columns: 1fr 320px;
}

.app-layout.minimal {
    grid-template-areas:
    "header"
    "main";
    grid-template-columns: 1fr;
}

/* Full-screen layout for annotation */
.app-layout.fullscreen {
    grid-template-areas:
    "toolbar"
    "canvas";
    grid-template-columns: 1fr;
    grid-template-rows: 60px 1fr;
}

/* Content Containers */
.content-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;

    &.wide {
        max-width: 95%;
    }

    &.narrow {
        max-width: 800px;
    }

    &.reading {
        max-width: 65ch;
    }

    &.fluid {
        max-width: 100%;
        padding: 1.5rem;
    }

    &.compact {
        padding: 1rem;
    }
}

/* Page-specific grids */
.crud-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;

    &.with-sidebar {
        grid-template-columns: 300px 1fr;
        gap: 2rem;
    }

    &.split-view {
        grid-template-columns: 1fr 1fr;
        gap: 2rem;
    }

    &.master-detail {
        grid-template-columns: 2fr 3fr;
        gap: 2rem;
    }

    &.three-panel {
        grid-template-columns: 1fr 2fr 1fr;
        gap: 1.5rem;
    }
}

.dashboard-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin: 1.5rem 0;

    &.dense {
        gap: 1rem;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }

    &.wide {
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
        gap: 2rem;
    }
}

/* Card grids for data display */
// Card Grid System - Fomantic-UI Integration
.card-grid {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));

    // CRITICAL: Override Fomantic's margin system for grid layouts
    .ui.card {
        margin: 0 !important; // Reset all margins

        // Override specific Fomantic rules
        &:first-child {
            margin-top: 0 !important;
        }

        &:last-child {
            margin-bottom: 0 !important;
        }

        // Ensure cards work properly in grid
        width: 100%;
        height: fit-content;
    }

    // Grid variants
    &.dense {
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 0.75rem;
    }

    &.wide-cards {
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 1.5rem;
    }

    &.small-cards {
        grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        gap: 1rem;
    }

    // Mobile responsiveness
    @media (max-width: 768px) {
        grid-template-columns: 1fr;
        gap: 1rem;

        &.dense,
        &.wide-cards,
        &.small-cards {
            grid-template-columns: 1fr;
        }
    }
}

// Alternative grid systems for different use cases
.stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;

    .ui.card {
        margin: 0 !important; // Same fix
    }
}

.dashboard-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
    margin: 1.5rem 0;

    .ui.card {
        margin: 0 !important; // Same fix
    }
}

/* Table container with sticky headers */
.table-container {
    position: relative;
    overflow: auto;
    max-height: calc(100vh - 200px);
    border: 1px solid var(--color-border-primary);
    border-radius: 8px;
    background: var(--color-bg-primary);

    &.full-height {
        max-height: calc(100vh - 120px);
    }

    &.compact {
        max-height: 400px;
    }

    &.scrollable-x {
        overflow-x: auto;
        overflow-y: hidden;
    }

    .ui.table {
        margin: 0;
        border: none;
        border-radius: 0;

        thead th {
            position: sticky;
            top: 0;
            background: var(--color-sidebar-bg);
            z-index: 10;
            border-bottom: 2px solid var(--color-border-primary);
            box-shadow: 0 1px 0 var(--color-border-primary);
        }

        &.striped tbody tr:nth-child(2n) {
            background: var(--color-sidebar-bg);
        }
    }
}

/* Form layouts */
.form-grid {
    display: grid;
    gap: 1.5rem;

    &.single-column {
        grid-template-columns: 1fr;
    }

    &.two-column {
        grid-template-columns: 1fr 1fr;
        gap: 1rem 2rem;
    }

    &.three-column {
        grid-template-columns: 1fr 1fr 1fr;
        gap: 1rem 1.5rem;
    }

    &.four-column {
        grid-template-columns: 1fr 1fr 1fr 1fr;
        gap: 1rem;
    }

    &.sidebar-form {
        grid-template-columns: 200px 1fr;
        gap: 2rem;
        align-items: start;
    }

    &.wide-sidebar {
        grid-template-columns: 300px 1fr;
        gap: 2.5rem;
    }

    &.auto-fit {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
    }
}

/* Stats grid for dashboard metrics */
.stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
    margin-bottom: 2rem;

    &.large-stats {
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
    }

    &.small-stats {
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 1rem;
    }

    &.two-column {
        grid-template-columns: 1fr 1fr;
    }

    &.four-column {
        grid-template-columns: repeat(4, 1fr);
    }
}

/* Gallery grid for images/videos */
.gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 1rem;

    &.large {
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
    }

    &.small {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 0.75rem;
    }

    &.square {
        grid-auto-rows: 1fr;

        .gallery-item {
            aspect-ratio: 1;
        }
    }

    &.masonry {
        grid-template-rows: masonry;
    }
}

/* Masonry-style grid for Pinterest-like layouts */
.masonry-grid {
    columns: 300px;
    column-gap: 1rem;

    &.narrow {
        columns: 250px;
    }

    &.wide {
        columns: 400px;
    }

    .masonry-item {
        break-inside: avoid;
        margin-bottom: 1rem;
        page-break-inside: avoid;
    }
}

/* Auto-fit grids with min/max constraints */
.auto-grid {
    display: grid;
    gap: 1rem;

    &.min-150 {
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    }

    &.min-200 {
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }

    &.min-250 {
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }

    &.min-300 {
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }

    &.min-400 {
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    }

    &.max-4-cols {
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        max-width: 1000px;
    }
}

/* Flexible container for mixed content */
.flex-container {
    display: flex;
    gap: 1.5rem;

    &.column {
        flex-direction: column;
    }

    &.wrap {
        flex-wrap: wrap;
    }

    &.nowrap {
        flex-wrap: nowrap;
    }

    &.center {
        justify-content: center;
        align-items: center;
    }

    &.between {
        justify-content: space-between;
    }

    &.around {
        justify-content: space-around;
    }

    &.evenly {
        justify-content: space-evenly;
    }

    &.start {
        justify-content: flex-start;
        align-items: flex-start;
    }

    &.end {
        justify-content: flex-end;
        align-items: flex-end;
    }

    &.stretch {
        align-items: stretch;
    }

    &.baseline {
        align-items: baseline;
    }
}

/* Split layouts for comparison views */
.split-layout {
    display: grid;
    height: 100%;

    &.horizontal {
        grid-template-columns: 1fr 1fr;
        grid-template-rows: 1fr;
    }

    &.vertical {
        grid-template-columns: 1fr;
        grid-template-rows: 1fr 1fr;
    }

    &.thirds {
        grid-template-columns: 1fr 1fr 1fr;
    }

    &.golden {
        grid-template-columns: 1.618fr 1fr;
    }

    .split-panel {
        overflow: auto;
        position: relative;

        &:not(:last-child) {
            border-right: 1px solid var(--color-border-primary);
        }
    }

    &.vertical .split-panel {
        &:not(:last-child) {
            border-right: none;
            border-bottom: 1px solid var(--color-border-primary);
        }
    }
}

/* Sidebar layouts for detail views */
.sidebar-layout {
    display: grid;
    gap: 2rem;

    &.left {
        grid-template-columns: 300px 1fr;
    }

    &.right {
        grid-template-columns: 1fr 300px;
    }

    &.wide-sidebar {
        &.left {
            grid-template-columns: 400px 1fr;
        }

        &.right {
            grid-template-columns: 1fr 400px;
        }
    }

    &.narrow-sidebar {
        &.left {
            grid-template-columns: 250px 1fr;
        }

        &.right {
            grid-template-columns: 1fr 250px;
        }
    }

    .sidebar-content {
        background: var(--color-sidebar-bg);
        border: 1px solid var(--color-border-primary);
        border-radius: 8px;
        padding: 1.5rem;
        height: fit-content;
        position: sticky;
        top: 1rem;
    }

    .main-content {
        min-width: 0; /* Prevents overflow in grid */
    }
}

/* Holy grail layout (header, footer, sidebar, main) */
.holy-grail {
    display: grid;
    min-height: 100vh;
    grid-template-areas:
    "header header header"
    "sidebar main aside"
    "footer footer footer";
    grid-template-columns: 250px 1fr 200px;
    grid-template-rows: auto 1fr auto;

    .hg-header {
        grid-area: header;
    }

    .hg-sidebar {
        grid-area: sidebar;
    }

    .hg-main {
        grid-area: main;
    }

    .hg-aside {
        grid-area: aside;
    }

    .hg-footer {
        grid-area: footer;
    }
}

/* Annotation workspace layout */
.annotation-workspace {
    display: grid;
    height: 100vh;
    grid-template-areas:
    "toolbar toolbar toolbar"
    "sidebar canvas properties"
    "timeline timeline timeline";
    grid-template-columns: 280px 1fr 320px;
    grid-template-rows: 60px 1fr 120px;
    gap: 0;

    .annotation-toolbar {
        grid-area: toolbar;
    }

    .annotation-sidebar {
        grid-area: sidebar;
    }

    .annotation-canvas {
        grid-area: canvas;
    }

    .annotation-properties {
        grid-area: properties;
    }

    .annotation-timeline {
        grid-area: timeline;
    }

    &.no-timeline {
        grid-template-areas:
      "toolbar toolbar toolbar"
      "sidebar canvas properties";
        grid-template-rows: 60px 1fr;
    }

    &.fullscreen-canvas {
        grid-template-areas:
      "toolbar"
      "canvas";
        grid-template-columns: 1fr;
        grid-template-rows: 60px 1fr;
    }
}

/* Nested grids for complex layouts */
.nested-grid {
    display: grid;
    gap: 1rem;

    .grid-section {
        display: grid;
        gap: 1rem;

        &.two-cols {
            grid-template-columns: 1fr 1fr;
        }

        &.three-cols {
            grid-template-columns: 1fr 1fr 1fr;
        }

        &.auto-cols {
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        }
    }
}

/* Responsive grid areas */
.responsive-grid {
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));

    .grid-item {
        &.span-2 {
            grid-column: span 2;
        }

        &.span-3 {
            grid-column: span 3;
        }

        &.span-full {
            grid-column: 1 / -1;
        }

        &.row-span-2 {
            grid-row: span 2;
        }
    }
}

/* CSS Subgrid support (future-proofing) */
@supports (grid-template-rows: subgrid) {
    .subgrid-container {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 1rem;

        .subgrid-item {
            display: grid;
            grid-template-rows: subgrid;
            grid-row: span 3;
        }
    }
}

/* Grid debugging (remove in production) */
.debug-grid {
    * {
        outline: 1px solid rgba(255, 0, 0, 0.3);
    }

    .grid-container {
        background: rgba(0, 255, 0, 0.1);
    }

    .grid-item {
        background: rgba(0, 0, 255, 0.1);
    }
}
